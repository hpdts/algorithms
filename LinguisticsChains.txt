Linguistic Chains

Write a program (Java or Python) that finds the word from which one can remove the most letters, one at a time, such that each resulting word is itself a valid word. For example, you can remove seven letters from "starting":

starting => stating => statin => satin => sati => sat => at => a

assuming your dictionary is:

a
at
bat
be
bee
sat
sati
satin
starting
statin
stating

The program must take the path to a dictionary as input. The dictionary will contain words, one per line. The program must output the longest chains which can be created from the words in the dictionary. The format must be as above with one space between each word and the following "=>" and one space after the "=>". If there are multiple words that produce equal length chains, then print each chain on a line by itself.

Your program must work with large dictionaries with more than a hundred thousand words.

What is the complexity of your program?

------------------------------------

Your program returns the wrong output.

it returns

abcdefgh => abcdefg => abcdef => abcde => abcd => abc => ab => a

instead of 
abcdefgh => abcdefg => abcdef => abcde => abcd => abc => ab => a
starting => stating => statin => satin => sati => sat => at => a

For
a
at
bat
be
bee
sat
sati
satin
starting
statin
stating
ab
abc
bcd
abcd
abcde
abcdef
abcdefg
abcdefgh
